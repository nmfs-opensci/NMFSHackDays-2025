{
  "hash": "6acdc518ce6d7b17ebae03ac16914076",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Working with terra data cubes\nauthor: Eli Holmes\n---\n\n\n\n::: {.callout-note title=\"Learning Objectives\"}\n1.  How to crop a single data file\n2.  How to create a data cube with `terra`\n3.  How to crop a data cube to a box\n:::\n\n## Summary\n\nOnce we have a `terra` SpatRaster, there are many things we can do with it like aggregation, sampling, means and interpolation.\n\n## Prerequisites\n\nSee the [1-earthdatalogin](1-earthdatalogin.html) tutorial for set-up if you are running the tutorial locally.\n\n## Load Required Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(earthdatalogin)\nlibrary(lubridate)\nlibrary(terra)\n```\n:::\n\n\n\n## Get a vector of urls to our nc files\n\nAuthenticate.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nearthdatalogin::edl_netrc() \n```\n:::\n\n\n\nGet the urls. The `results` object is a vector of urls pointing to our `netCDF` files in the cloud. Each `netCDF` file is circa 670Mb.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshort_name <- 'AVHRR_OI-NCEI-L4-GLOB-v2.1'\nbbox <- c(xmin=-75.5, ymin=33.5, xmax=-73.5, ymax=35.5) \ntbox <- c(\"2020-01-20\", \"2020-02-10\")\n\nresults <- earthdatalogin::edl_search(\n  short_name = short_name,\n  version = \"2.1\",\n  temporal = tbox, \n  bounding_box = paste(bbox,collapse=\",\")\n)\nlength(results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 23\n```\n\n\n:::\n:::\n\n\n\n## Create a data cube\n\nI will get 10 days of data and crop to a small area.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ne <- terra::ext(c(xmin=-75.5, xmax=-73.5,  ymin=33.5, ymax=35.5 ))\nras <- terra::rast(results, vsi=TRUE)\nras <- terra::crop(ras, e)[\"analysed_sst\"]\n```\n:::\n\n\n\nPlot the first day.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ras[[1]])\n```\n\n::: {.cell-output-display}\n![](4-data-cubes_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n## Raster summary\n\nmean, max, var etc of a SpatRaster returns a single SpatRaster.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(ras)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 8, 8, 1  (nrow, ncol, nlyr)\nresolution  : 0.25, 0.25  (x, y)\nextent      : -75.5, -73.5, 33.5, 35.5  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 \nsource(s)   : memory\nname        :     mean \nmin value   : 287.9596 \nmax value   : 297.5391 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mean(ras))\n```\n\n::: {.cell-output-display}\n![](4-data-cubes_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Global summary\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- terra::global(ras, mean, na.rm=TRUE)\ng\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    mean\nanalysed_sst    295.4739\nanalysed_sst.1  295.4770\nanalysed_sst.2  295.5378\nanalysed_sst.3  295.7533\nanalysed_sst.4  296.2651\nanalysed_sst.5  296.2378\nanalysed_sst.6  296.2144\nanalysed_sst.7  296.1822\nanalysed_sst.8  295.9805\nanalysed_sst.9  295.8164\nanalysed_sst.10 295.7742\nanalysed_sst.11 295.4317\nanalysed_sst.12 295.0430\nanalysed_sst.13 294.8886\nanalysed_sst.14 295.2201\nanalysed_sst.15 295.4745\nanalysed_sst.16 295.7053\nanalysed_sst.17 295.7719\nanalysed_sst.18 295.7725\nanalysed_sst.19 295.9198\nanalysed_sst.20 295.9339\nanalysed_sst.21 295.4420\nanalysed_sst.22 295.2062\n```\n\n\n:::\n:::\n\n\n\nYou can do custom functions.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- global(ras, function(i) min(i) / max(i))\ndata.frame(date = as.Date(time(ras)), g, row.names = NULL)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         date    global\n1  2020-01-19 0.9724734\n2  2020-01-20 0.9752058\n3  2020-01-21 0.9786648\n4  2020-01-22 0.9784272\n5  2020-01-23 0.9773435\n6  2020-01-24 0.9771800\n7  2020-01-25 0.9779417\n8  2020-01-26 0.9783383\n9  2020-01-27 0.9736170\n10 2020-01-28 0.9659007\n11 2020-01-29 0.9614405\n12 2020-01-30 0.9607350\n13 2020-01-31 0.9635287\n14 2020-02-01 0.9597049\n15 2020-02-02 0.9513898\n16 2020-02-03 0.9530059\n17 2020-02-04 0.9540010\n18 2020-02-05 0.9557561\n19 2020-02-06 0.9588261\n20 2020-02-07 0.9603808\n21 2020-02-08 0.9633926\n22 2020-02-09 0.9653459\n23 2020-02-10 0.9651319\n```\n\n\n:::\n:::\n\n\n\nYou can get the range.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- terra::global(ras, range, na.rm=TRUE)\ndata.frame(date = as.Date(time(ras)), g, row.names = NULL)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         date     X1     X2\n1  2020-01-19 289.34 297.53\n2  2020-01-20 290.27 297.65\n3  2020-01-21 291.28 297.63\n4  2020-01-22 291.63 298.06\n5  2020-01-23 292.04 298.81\n6  2020-01-24 292.04 298.86\n7  2020-01-25 291.72 298.30\n8  2020-01-26 291.31 297.76\n9  2020-01-27 289.69 297.54\n10 2020-01-28 287.51 297.66\n11 2020-01-29 286.74 298.24\n12 2020-01-30 286.52 298.23\n13 2020-01-31 286.38 297.22\n14 2020-02-01 284.85 296.81\n15 2020-02-02 283.40 297.88\n16 2020-02-03 283.91 297.91\n17 2020-02-04 284.34 298.05\n18 2020-02-05 284.93 298.12\n19 2020-02-06 286.20 298.49\n20 2020-02-07 286.52 298.34\n21 2020-02-08 287.38 298.30\n22 2020-02-09 287.48 297.80\n23 2020-02-10 287.59 297.98\n```\n\n\n:::\n:::\n\n\n\n## Monthly means\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to convert times to year-month format\nyear_month <- function(x) {\n  format(as.Date(time(x), format=\"%Y-%m-%d\"), \"%Y-%m\")\n}\n\n# Format time to Year-month for monthly aggregation \nym <- year_month(ras)\nym\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"2020-01\" \"2020-01\" \"2020-01\" \"2020-01\" \"2020-01\" \"2020-01\" \"2020-01\"\n [8] \"2020-01\" \"2020-01\" \"2020-01\" \"2020-01\" \"2020-01\" \"2020-01\" \"2020-02\"\n[15] \"2020-02\" \"2020-02\" \"2020-02\" \"2020-02\" \"2020-02\" \"2020-02\" \"2020-02\"\n[22] \"2020-02\" \"2020-02\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute raster mean grouped by Year-month\nmonthly_mean_rast <- terra::tapp(ras, ym, fun = mean)\n\n# Compute mean across raster grouped by Year-month\nmonthly_means <- terra::global(monthly_mean_rast, fun = mean, na.rm=TRUE)\nmonthly_means\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             mean\nX2020.01 295.7836\nX2020.02 295.5335\n```\n\n\n:::\n:::\n\n\n\n## Conclusions\n\nSome really cool things just happened here! You connected to multiple remote-sensing files (`netCDF`) in the cloud and worked with them without directly downloading them.\n",
    "supporting": [
      "4-data-cubes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}