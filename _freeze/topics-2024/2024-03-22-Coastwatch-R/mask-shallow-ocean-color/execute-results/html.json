{
  "hash": "6af8c40dcfc7168047670415311b910f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Mask shallow pixels for satellite ocean color datasets\nauthor: NOAA CoastWatch\ndate: March 2024\noutput: \n  md_document\n---\n\n\n# Mask shallow pixels for satellite ocean color datasets\n\n\n::: {.cell}\n\n:::\n\n\n> Updated March 2024 <br/>\n\nRemotely sensed ocean color algorithms are calibrated for optically-deep waters, where the signal received by the satellite sensor originates from the water column without any bottom contribution.\n\nOptically shallow waters are those in which light reflected off the seafloor contributes significantly to the water-leaving signal, such as coral reefs, atolls, lagoons. This is known to affect geophysical variables derived by ocean-color algorithms, often leading to biased values in chlorophyll-a concentration for example.\n\nIn the tropical Pacific, optically-deep waters are typically deeper than 15 – 30 m. It is recommended to remove shallow-pixels, i.e., ocean color pixels that contain a portion (e.g., more than 5%) of shallow water area (less than 30m depth), from the study area before computing ocean color metrics (Couch et al., 2023).\n\n\n\n## Objective\n\nIn this tutorial, we demonstrate how to create a mask to remove ocean color pixels in the coastal shallow water that are contaminated by bottom reflectance. \n\n\n## The tutorial demonstrates the following techniques\n\n* Accessing and Downloading satellite data from ERDDAP data server\n* Visualizing the datasets\n* Matching coarse-resolution ocean color data with fine-resolution bathymetry data\n* Calculating percentage of shallow water area in each ocean color pixel \n* Creating and applying value mask to datasets\n* Calculating long-term climatology from monthly data\n* Outputing dataset into netCDF format \n\n## Datasets used\n\n**Bathymetry data**, <a href=\"https://www.ncei.noaa.gov/products/etopo-global-relief-model\">ETOPO Global Relief Model</a> integrates topography, bathymetry, and shoreline data, version 2022, 15 arc-second resolution\n\n**Ocean color data**, <a href=\"https://climate.esa.int/en/projects/ocean-colour\">ESA CCI</a> chlorophyll-a concentration, 1998-2022, monthly\n\n\n## References\n\nCouch CS, Oliver TA, Dettloff K, Huntington B, Tanaka KR and Vargas-Ángel B (2023) Ecological and environmental predictors of juvenile coral density across the central and western Pacific. Front. Mar. Sci. 10:1192102. <a href=\"https://www.frontiersin.org/articles/10.3389/fmars.2023.1192102/full\"> doi: 10.3389/fmars.2023.1192102 </a>\n\n\n## Load libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(rerddap)\nlibrary(raster) \nlibrary(sp) \nlibrary(cmocean)\nlibrary(here)\nlibrary(ncdf4)\n```\n:::\n\n\n## Set work directory\n\n::: {.cell}\n\n```{.r .cell-code}\n# This is where the data are and where the plots will go\nDir <- here()\n```\n:::\n\n\n## Access and Download satellite data\n\nWe will access the ETOPO2022 bathymetry data and the monthly ESA CCI chlorophyll-a concentration data (1/1998-12/2022) for the island of Oahu from the OceanWatch ERDDAP server. We will also download the chlorophyll-a data and save it to local for future use.\n\nThe data can be downloaded by sending a data request to the ERDDAP server via URL.  The data request URL includes the dataset ID of interest and other query conditions if subset of the data product is of interest. \n\nTo learn more about how to set up ERDDAP URL data requests, please go to the <a href=\"https://github.com/coastwatch-training/CoastWatch-Tutorials/tree/main/ERDDAP-basics\" target=\"_blank\">ERDDAP module page</a>.\n\nWe will utilize the '''rerddap''' R package to engage with the ERDDAP data server. The '''rerddap''' package, created by Roy Mendelssohn (SWFSC) and Scott Chamberlain, is designed to simplify the process of importing data into R.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bounding box for Oahu:\nlon_range = c(-158.39+360, -157.55+360)\nlat_range = c(21.14, 21.8)\n\n# Set ERDDAP URL\nERDDAP_Node = \"https://oceanwatch.pifsc.noaa.gov/erddap/\"\n\n# Download bathymetry data with its unique ID \nETOPO_id = 'ETOPO_2022_v1_15s'\nETOPO_info=info(datasetid = ETOPO_id,url = ERDDAP_Node)\nbathy =  griddap(url = ERDDAP_Node, ETOPO_id, \n                 latitude = lat_range, longitude = lon_range)\n\n# Download ocean color data with its unique ID\nCCI_id = 'esa-cci-chla-monthly-v6-0'\nCCI_info=info(datasetid = CCI_id,url = ERDDAP_Node)\nvar=CCI_info$variable$variable_name\nchl = griddap(url = ERDDAP_Node, CCI_id, \n                   time = c('1998-01-01', '2022-12-01'),\n                   latitude = lat_range, longitude = lon_range,\n                   fields = var[1],\n                   store=disk('chl_data'))\n```\n:::\n\n## Visualize bathymetry and chlorophyll-a data\nWe convert bathymetry and chlorophyll-a data to rasters for visulization.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert the data into a raster layer\nr_bathy=raster(bathy$summary$filename)\n\nplot(r_bathy,main=\"ETOPO Bathymetry (m)\")\ncontour(r_bathy,levels=c(-30,-1000,-2000),add=TRUE) \n```\n\n::: {.cell-output-display}\n![](images/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert the data into a raster layer\nr_chl=raster(chl$summary$filename,varname=var[1]) \n\nplot(log(r_chl),main=\"ESA CCI Chl-a (log scale)\",col=cmocean('algae')(50))\ncontour(r_bathy,levels=c(-30,-1000,-2000),add=TRUE) \n```\n\n::: {.cell-output-display}\n![](images/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Match two datasets and calculate percentage of shallow water area in each ocean color pixel \nThe ocean color data has coarser resolution (~4km) compared with the bathymetry data (~500m). We will calculate how much area (percentage) within each ocean color pixel is in shallow water (<30m depth).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Convert raster bathymetry to SpatialPoints dataframe for counting\ndf_bathy = data.frame(rasterToPoints(r_bathy))\ncoordinates(df_bathy) <- ~x+y\ncrs(df_bathy) = crs(r_chl[[1]])\n\n# Define a function to calculate the percentage of (smaller) bathymetry pixels in each (larger) Chl-a pixel that are shallow\npercent_shallow_pixels=function(depths,threshold=-30, na.rm=F){ \n  return(length(which(depths>threshold))/length(depths)) \n} \n  \n# Build a raster of the chl-a grid, using the function to generate the shallow water area percentage to consider a pixel necessary to mask\nper_shallow =  rasterize(x = df_bathy,y=r_chl,fun=percent_shallow_pixels)[[2]]\nplot(per_shallow,main=\"% Shallow water\", col=cmocean('amp')(50))\n```\n\n::: {.cell-output-display}\n![](images/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Create a mask for shallow pixels\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set a percentage threshold to create the shallow pixel mask\npercent_threshold = 0.05\ndepth_mask = r_chl/r_chl\ndepth_mask[,]= 1\ndepth_mask[per_shallow>= percent_threshold]= NA\nplot(depth_mask,main=\"Shallow pixel mask\")\n```\n\n::: {.cell-output-display}\n![](images/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## Calculate long-term climatology and compare unmasked and masked maps \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in the files previousely downloaded\nfiles = list.files('chl_data/', full.names = T)\n# Read the file into R and make it to rasterstack\nstack_chl = stack(files)\n# Convert raster data to dataframe for calculating climatology\ndf_chl = as.data.frame(rasterToPoints(stack_chl))\ndf_chl$z = rowMeans(df_chl[,3:dim(df_chl)[2]], na.rm = T)\n# Convert dataframe to raster for mapping\nr_chl_clim = rasterFromXYZ(df_chl[,c(\"x\", \"y\", \"z\")])\n# Map unmasked climatology\nplot(log(r_chl_clim),main=\"Chl-a (log scale)\",col=cmocean('algae')(50))\ncontour(r_bathy,levels=c(-30,-1000,-2000),add=TRUE) \n```\n\n::: {.cell-output-display}\n![](images/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Apply Mask, calculate climatology and map\nr_chl_masked = mask(x = stack_chl, mask = depth_mask)\n# Convert masked raster data to dataframe for calculating climatology\ndf_chl_masked = as.data.frame(rasterToPoints(r_chl_masked))\ndf_chl_masked$z = rowMeans(df_chl_masked[,3:dim(df_chl_masked)[2]], na.rm = T)\n# Convert dataframe to raster for mapping\nr_chl_masked_clim = rasterFromXYZ(df_chl_masked[,c(\"x\", \"y\", \"z\")])\n# Map masked climatology\nplot(log(r_chl_masked_clim),main=\"Masked Chl-a (log scale)\",col=cmocean('algae')(50))\ncontour(r_bathy,levels=c(-30,-1000,-2000),add=TRUE) \n```\n\n::: {.cell-output-display}\n![](images/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## Output masked chlorophyll-a data to a netCDF file\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Grab var name and unit from unmasked nc file\nnc = nc_open(paste0(files))\nvariable_name = as.character(nc$var[[1]][2])\nvariable_unit = as.character(nc$var[[1]][8])\nx_name = nc$dim$longitude$name\ny_name = nc$dim$latitude$name\nz_name = nc$dim$time$name\nz_unit = nc$dim$time$units\nnc_close(nc)\n# Set a file name and output path for the masked data\nmasked_fln = 'esa_cci_monthly_chl-a_masked.nc'\nmask_path = paste0(Dir,  \"/output/\")\nif (!dir.exists(mask_path)) {\n  dir.create(mask_path)\n}\n# Write out masked nc.file\nwriteRaster(r_chl_masked,\n            paste0(mask_path, masked_fln),\n            overwrite = T,\n            varname = variable_name,\n            varunit = variable_unit,\n            xname = x_name,\n            yname = y_name,\n            zname = z_name,\n            zunit = z_unit)\n```\n:::\n\n\n## Acknowledgements\n\nSpecial thanks to Kisei Tanaka from NOAA's Pacific Islands Fisheries Science Center (PIFSC) for his contributions to this tutorial, which is adapted from the scripts he developed. Additionally, portions of this tutorial have been revised based on a previous version created by Melanie Abecassis and Thomas Oliver.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}