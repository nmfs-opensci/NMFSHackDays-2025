{
  "hash": "f988a1655ce437a30b48e78d4b879aa5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"landsat imagery for a region\"\n---\n\n\n**Update: I was unable to get the code to run when I tried to run this months later.**\n\nIn this example, I will use `sits` to prepare some imagery for a specific region and get snow estimates. https://www.usgs.gov/landsat-missions/normalized-difference-snow-index\n\nI will use the Microsoft Planetary Computer data since it has a nice vizualization that will help me find tiles.\n\n## Get the tile IDs\n\nFirst step is to go to the visualizer and figure out the tiles I need. I am looking at an area close to the Canadian border of Washington state. [MPC search page](https://planetarycomputer.microsoft.com/explore?c=-120.2907%2C48.6029&z=9.00&v=2&d=sentinel-2-l2a&m=Most+recent+%28low+cloud%29&r=Natural+color&s=false%3A%3A100%3A%3Atrue&sr=desc&ae=0). I want to click on the files in the left nav and get the tile ids around \"Early Winters\". I need four: \"10UFU\", \"10UGU\", \"10UGV\", \"10UFV\". \n\nAt first I used tiles, but later went to a small region of interest (roi). When I went from tiles to roi in the `sits_regularize()` the last date had no data and that caused errors.\n\n## Load the package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sits)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSITS - satellite image time series analysis.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoaded sits v1.5.1.\n        See ?sits for help, citation(\"sits\") for use in publication.\n        Documentation avaliable in https://e-sensing.github.io/sitsbook/.\n```\n\n\n:::\n:::\n\n\n## Get the data\n\nI am going to get a month of data for a small region.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroi <- c(\n  lon_min = -120.436866, lat_min = 47.570978,\n  lon_max = -120.375207, lat_max = 48.611761\n)\ns2_cube <- sits_cube(\n    source = \"MPC\",\n    collection = \"SENTINEL-2-L2A\",\n    roi = roi,\n    bands = c(\"B03\", \"B11\", \"CLOUD\"),\n    start_date = as.Date(\"2022-07-01\"),\n    end_date = as.Date(\"2022-07-31\")\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n:::\n\n\nThe time line is not regular.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsits_timeline(s2_cube)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: cube is not regular, returning all timelines\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`10TFT`\n [1] \"2022-07-01\" \"2022-07-03\" \"2022-07-08\" \"2022-07-11\" \"2022-07-13\"\n [6] \"2022-07-16\" \"2022-07-18\" \"2022-07-21\" \"2022-07-23\" \"2022-07-26\"\n[11] \"2022-07-28\"\n\n$`10UFU`\n[1] \"2022-07-01\" \"2022-07-06\" \"2022-07-11\" \"2022-07-16\" \"2022-07-21\"\n[6] \"2022-07-26\"\n```\n\n\n:::\n:::\n\n\n## Save our cube\n\nThe documentation says things are faster if we save a copy of our files. And we will reduce the area of interest to a really small area and weekly data.  This is going to save a bunch of little files (4 tiles x 52 weeks x 3 bands) into the tempdir. This saving takes a long time itself and seems kind of pointless for this case. So I skipped this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# roi as (lon_min, lon_max, lat_min, lat_max)\nroi <- c(\n  lon_min = -120.436866, lat_min = 48.570978,\n  lon_max = -120.375207, lat_max = 48.611761\n)\nsits_cube_copy(s2_cube,\n  output_dir = here::here(\"topics-2024/2024-05-24-sits/tempdir/chl1\"),\n  roi = roi\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  18%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |=====================                                                 |  29%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |=========================                                             |  35%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  71%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |======================================================                |  76%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |==========================================================            |  82%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 12\n  source collection     satellite sensor tile    xmin   xmax   ymin   ymax crs  \n  <chr>  <chr>          <chr>     <chr>  <chr>  <dbl>  <dbl>  <dbl>  <dbl> <chr>\n1 MPC    SENTINEL-2-L2A SENTINEL… MSI    10UFU 688910 693620 5.38e6 5.39e6 EPSG…\n2 MPC    SENTINEL-2-L2A SENTINEL… MSI    10UFU 688900 693620 5.38e6 5.39e6 EPSG…\n# ℹ 2 more variables: labels <list>, file_info <list>\n```\n\n\n:::\n:::\n\n\n## Regularize our cube\n\nNext we need to regularize our cube. I will regularize to 14 day period with a 60m resolution. This is going to take a little while time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreg_cube <- sits_regularize(\n  cube = s2_cube,\n  output_dir = here::here(\"topics-2024/2024-05-24-sits/tempdir/chl2\"),\n  roi = roi,\n  res  = 60,\n  period = \"P14D\",\n  multicores = 4\n )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: regularization is faster when data is stored locally\n use 'sits_cube_copy()' to copy data locally before regularization\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n:::\n\n\n\n## Snow index\n\nhttps://sentiwiki.copernicus.eu/web/s2-processing#S2Processing-Step1b:NormalisedDifferenceSnowIndex(NDSI)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreg_cube <- sits_apply(reg_cube,\n   NDSI = (B03 - B11)/(B03 + B11),\n   output_dir = here::here(\"topics-2024/2024-05-24-sits/tempdir/chl2\"),\n   multicores = 4\n   )\n```\n:::\n\n\n## Plot\n\nMake a plot.\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(reg_cube,\n  band = \"NDSI\",\n  date = \"2022-07-15\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n-- tmap v3 code detected --\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n[v3->v4] tm_raster(): instead of 'style = \"cont\"', use 'col.scale = tm_scale_continuous()' and migrate the argument(s) 'style.args', 'midpoint', 'palette' (rename to 'values') to 'tm_scale_continuous(<HERE>)'. For small multiples, specify a 'tm_scale_' for each multiple, and put them in a list: 'col.scale = list(<scale1>, <scale2>, ...)'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n[v3->v4] tm_raster(): migrate the argument(s) related to the legend of the visual variable 'col', namely 'title' to 'col.legend = tm_legend(<HERE>)'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n[cols4all] color palettes: use palettes from the R package cols4all. Run 'cols4all::c4a_gui()' to explore them. The old palette name \"RdYlGn\" is named \"rd_yl_gn\" (in long format \"brewer.rd_yl_gn\")\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](sits-example_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nERROR\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Obtain a time series from the raster cube from a point\nsample_latlong <- tibble::tibble(\n  longitude = -120.43687,\n  latitude  = -47.57098\n)\nseries <- sits_get_data(\n  cube = reg_cube,\n  samples = sample_latlong\n)\n```\n:::\n",
    "supporting": [
      "sits-example_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}