---
title: Working with terra data cubes
author: Eli Holmes
---

::: {.callout-note title="Learning Objectives"}
1.  How to crop a single data file
2.  How to create a data cube with `terra`
3.  How to crop a data cube to a box
:::

## Summary

Once we have a `terra` SpatRaster, there are many things we can do with it like aggregation, sampling, means and interpolation.

## Prerequisites

See the [1-earthdatalogin](1-earthdatalogin.html) tutorial for set-up if you are running the tutorial locally.

## Load Required Packages

```{r message=FALSE}
library(earthdatalogin)
library(lubridate)
library(terra)
```

## Get a vector of urls to our nc files

Authenticate.

```{r}
earthdatalogin::edl_netrc() 
```

Get the urls. The `results` object is a vector of urls pointing to our `netCDF` files in the cloud. Each `netCDF` file is circa 670Mb.

```{r results_SST}
short_name <- 'AVHRR_OI-NCEI-L4-GLOB-v2.1'
bbox <- c(xmin=-75.5, ymin=33.5, xmax=-73.5, ymax=35.5) 
tbox <- c("2020-01-20", "2020-02-10")

results <- earthdatalogin::edl_search(
  short_name = short_name,
  version = "2.1",
  temporal = tbox, 
  bounding_box = paste(bbox,collapse=",")
)
length(results)
```

## Create a data cube

I will get 10 days of data and crop to a small area.

```{r get_one_MUR}
e <- terra::ext(c(xmin=-75.5, xmax=-73.5,  ymin=33.5, ymax=35.5 ))
ras <- terra::rast(results, vsi=TRUE)
ras <- terra::crop(ras, e)["analysed_sst"]
```

Plot the first day.
```{r}
plot(ras[[1]])
```

## Raster summary

mean, max, var etc of a SpatRaster returns a single SpatRaster.

```{r}
mean(ras)
```
```{r}
plot(mean(ras))
```

## Global summary

```{r}
g <- terra::global(ras, mean, na.rm=TRUE)
g
```

You can do custom functions.

```{r}
g <- global(ras, function(i) min(i) / max(i))
data.frame(date = as.Date(time(ras)), g, row.names = NULL)
```

You can get the range.

```{r}
g <- terra::global(ras, range, na.rm=TRUE)
data.frame(date = as.Date(time(ras)), g, row.names = NULL)
```

## Monthly means

```{r get_monthly_means}
# Function to convert times to year-month format
year_month <- function(x) {
  format(as.Date(time(x), format="%Y-%m-%d"), "%Y-%m")
}

# Format time to Year-month for monthly aggregation 
ym <- year_month(ras)
ym
```


```{r mon_mean}
# Compute raster mean grouped by Year-month
monthly_mean_rast <- terra::tapp(ras, ym, fun = mean)

# Compute mean across raster grouped by Year-month
monthly_means <- terra::global(monthly_mean_rast, fun = mean, na.rm=TRUE)
monthly_means
```

## Conclusions

Some really cool things just happened here! You connected to multiple remote-sensing files (`netCDF`) in the cloud and worked with them without directly downloading them.
